---
name: from-peering-manager
source:
  name: peeringmanager
  settings:
    url: "https://demo.peering-manager.net"
    # api_endpoint: "api"
    # auth_method: "token"
    token: "13bf6338aed52d172e33750d39717fff5a5f5d18"

destination:
  name: infrahub
  settings:
    url: "http://localhost:8000"

order: [
  "InfraAutonomousSystem",
  "InfraBGPCommunity",
  "InfraBGPRoutingPolicy",
  "InfraBGPPeerGroup",
  "InfraIXP",
  "IpamIPAddress",
  "InfraIXPConnection",
]

schema_mapping:
  - name: InfraAutonomousSystem
    mapping: peering/autonomous-systems
    identifiers: ["asn"]
    fields:
      - name: name
        mapping: name
      - name: description
        mapping: display
      - name: asn
        mapping: asn
      - name: irr_as_set
        mapping: irr_as_set
      - name: ipv4_max_prefixes
        mapping: ipv4_max_prefixes
      - name: ipv6_max_prefixes
        mapping: ipv6_max_prefixes
      - name: affiliated
        mapping: affiliated

  - name: InfraBGPCommunity
    mapping: peering/communities
    identifiers: ["name"]
    fields:
      - name: name
        mapping: slug
      - name: label
        mapping: name
      - name: description
        mapping: description
      - name: value
        mapping: value
      - name: community_type
        mapping: type


  - name: InfraBGPRoutingPolicy
    mapping: peering/routing-policies
    identifiers: ["name"]
    fields:
      - name: name
        mapping: slug
      - name: label
        mapping: name
      - name: description
        mapping: description
      - name: policy_type
        mapping: type
      - name: weight
        mapping: weight
      - name: address_family
        mapping: address_family
      - name: bgp_communities
        mapping: communities
        reference: InfraBGPCommunity

  - name: InfraBGPPeerGroup
    mapping: peering/bgp-groups
    identifiers: ["name"]
    fields:
      - name: name
        mapping: name
      - name: description
        mapping: description
      - name: status
        mapping: status.value
      - name: import_policies
        mapping: import_routing_policies
        reference: InfraBGPRoutingPolicy
      - name: export_policies
        mapping: export_routing_policies
        reference: InfraBGPRoutingPolicy
      - name: bgp_communities
        mapping: communities
        reference: InfraBGPCommunity

  - name: InfraIXP
    mapping: peering/internet-exchanges
    identifiers: ["name"]
    fields:
      - name: name
        mapping: name
      - name: description
        mapping: description
      - name: status
        mapping: status.value
      - name: import_policies
        mapping: import_routing_policies
        reference: InfraBGPRoutingPolicy
      - name: export_policies
        mapping: export_routing_policies
        reference: InfraBGPRoutingPolicy
      - name: bgp_communities
        mapping: communities
        reference: InfraBGPCommunity
    # Showcase Filters
    filters:
      - field: name
        operation: "is_not_empty"
      - field: status.value
        operation: contains
        value: "enabled"
      - field: name
        operation: contains
        value: "S.H.I.E.L.D"
    # Showcase Transforms
    transforms:
      - field: description
        expression: "{{ name.upper() }}[{{ status.value.lower() }}]"

  # Create the IPv4 and IPv6 from the InfraIXPConnection
  # /!\ 'address' is mandatory on Infrahub but it can be empty in PeeringManager
  - name: IpamIPAddress
    mapping: net/connections
    identifiers: ["address"]
    fields:
      - name: address
        mapping: ipv6_address
      - name: description
        mapping: name
    filters:
      - field: ipv6_address
        operation: "is_not_empty"
  - name: IpamIPAddress
    mapping: net/connections
    identifiers: ["address"]
    fields:
      - name: address
        mapping: ipv4_address
      - name: description
        mapping: name
    filters:
      - field: ipv4_address
        operation: "is_not_empty"

  - name: InfraIXPConnection
    mapping: net/connections
    identifiers: ["name"]
    fields:
      - name: name
        mapping: name
      - name: peeringdb_netixlan
        mapping: peeringdb_netixlan.id
      - name: description
        mapping: description
      - name: status
        mapping: status.value
      - name: vlan
        mapping: vlan
      - name: ipv6_address
        mapping: ipv6_address
        reference: IpamIPAddress
      - name: ipv4_address
        mapping: ipv4_address
        reference: IpamIPAddress
      - name: internet_exchange_point
        mapping: internet_exchange_point
        reference: InfraIXP
    # Showcase Filters
    # As we filter InfraIXP on the name S.H.I.E.L.D, we need to have the same filter here
    # to avoid importing IXP Connection without IXP
    filters:
      - field: internet_exchange_point.name
        operation: contains
        value: "S.H.I.E.L.D"
