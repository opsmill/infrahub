---
services:
  message-queue:
    user: rabbitmq
    image: "${MESSAGE_QUEUE_DOCKER_IMAGE:-rabbitmq:latest}"
    environment:
      - "RABBITMQ_DEFAULT_USER=infrahub"
      - "RABBITMQ_DEFAULT_PASS=infrahub"
    healthcheck:
      test: rabbitmq-diagnostics -q check_port_connectivity
      interval: 5s
      timeout: 30s
      retries: 10
      start_period: 3s
  cache:
    image: "${CACHE_DOCKER_IMAGE:-redis:latest}"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 5s
      timeout: 5s
      retries: 3
  task-manager:
    image: "${TASK_MANAGER_DOCKER_IMAGE:-prefecthq/prefect:3.0-python3.12}"
    command: prefect server start --host 0.0.0.0 --ui
    environment:
      PREFECT_API_DATABASE_CONNECTION_URL: postgresql+asyncpg://postgres:postgres@task-manager-db:5432/prefect
      PREFECT_LOCAL_STORAGE_PATH: ${PREFECT_LOCAL_STORAGE_PATH:-/opt/prefect/}
      PREFECT_WORKER_QUERY_SECONDS: 3
      PREFECT_AGENT_QUERY_INTERVAL: 3
    healthcheck:
      test: /usr/local/bin/httpx http://localhost:4200/api/health || exit 1
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    depends_on:
      - task-manager-db
  task-manager-db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=prefect
    volumes:
      - workflow_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  workflow_db:
