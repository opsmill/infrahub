---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "infrahub-helm.fullname" . }}-message-queue
  labels:
    service: message-queue
  {{- include "infrahub-helm.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.messageQueue.replicas | default 1 }}
  selector:
    matchLabels:
      service: message-queue
    {{- include "infrahub-helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        service: message-queue
      {{- include "infrahub-helm.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - env:
            - name: RABBITMQ_USERNAME
              value: {{ .Values.messageQueue.auth.username | quote }}
            - name: RABBITMQ_PASSWORD
              value: {{ .Values.messageQueue.auth.password | quote }}
            - name: KUBERNETES_CLUSTER_DOMAIN
              value: {{ quote .Values.globalkubernetesClusterDomain }}
          {{- with .Values.messageQueue.messageQueue.envFromExistingSecret }}
          envFrom:
            - secretRef:
                name: {{ . }}
          {{- end }}
          image: {{ .Values.messageQueue.messageQueue.image.repository }}:{{ .Values.messageQueue.messageQueue.image.tag }}
          imagePullPolicy: {{ default .Values.global.imagePullPolicy .Values.messageQueue.messageQueue.imagePullPolicy }}
          {{- if .Values.messageQueue.livenessProbe.enabled }}
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - rabbitmq-diagnostics -q ping
            initialDelaySeconds: {{ .Values.messageQueue.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.messageQueue.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.messageQueue.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.messageQueue.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.messageQueue.livenessProbe.successThreshold }}
          {{- end }}
          name: message-queue
          ports:
          {{- range .Values.messageQueue.ports }}
            - containerPort: {{ .targetPort }}
              protocol: TCP
              name: {{ quote .name }}
          {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/rabbitmq
      restartPolicy: Always
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "infrahub-helm.fullname" . }}-message-queue-config
            items:
              - key: rabbitmq.conf
                path: rabbitmq.conf

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "infrahub-helm.fullname" . }}-message-queue
  labels:
    service: message-queue
  {{- include "infrahub-helm.labels" . | nindent 4 }}
spec:
  type: {{ .Values.messageQueue.type }}
  selector:
    service: message-queue
  {{- include "infrahub-helm.selectorLabels" . | nindent 4 }}
  ports:
	{{- .Values.messageQueue.ports | toYaml | nindent 4 }}
