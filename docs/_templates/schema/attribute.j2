---
label: Attribute
layout: default
order: 800
---
<!-- vale off -->
<!-- markdownlint-disable MD012 -->
{% macro attribute_constraints(attr) -%}
{% if attr.regex %} Regex: `{{attr.regex}}`{% endif %}{% if attr.regex and (attr.min_length or attr.max_length) %}<br>{% endif %}{% if attr.min_length or attr.max_length %} Length: min {{attr.min_length | default("-")}}, max {{attr.max_length | default("-")}}{% endif -%}
{%- endmacro %}
{% macro bool_to_str(value) -%}
{% if value == true %}True{% else %}False{% endif -%}
{%- endmacro -%}
{% macro reverse_bool_to_str(value) -%}
{% if value == true %}False{% else %}True{% endif -%}
{%- endmacro -%}
{% set ns = namespace(node=none) -%}
{% for node in schema.nodes -%}
{%   if node.name == "Attribute" -%}
{%     set ns.node = node -%}
{%   endif -%}
{% endfor -%}
# Attribute

In a schema file, an attribute can be defined inside a `node`, a `generic` or a `node extension`.

## Summary

Below is the list of all available options to define an Attribute in the schema

| Name | Type | Description | Mandatory | { class="compact" }
| ---- | ---- | ---- | --------- |
{%- for attr in ns.node.attributes | sort(attribute='name')%}
{%-  if attr.name not in ["inherited"] %}
| [**{{ attr.name }}**](#{{ attr.name }}) | Attribute | {{ attr.description }} | {{ reverse_bool_to_str(attr.optional) }} |
{%- endif %}
{%- endfor %}

## Example

```yaml
nodes:
  - name: Rack
    attributes:
      - name: name
        kind: Text
        unique: True
        description: Unique identifier for the rack
extensions:
  nodes:
    - kind: CoreProposedChange
      attribute:
        - name: ticket_id
            kind: Text
            unique: True
            optional: False
            description: Internal Ticket ID from Service Now
```

## Reference Guide

{% for attr in ns.node.attributes | sort(attribute='name') -%}
### {{ attr.name }}

| Key | Value | { class="compact" }
| ---- | --------------- |
| **Name** | {{ attr.name }} |
| **Kind** | `{{ attr.kind }}` |
| **Description** | {{ attr.description }} |
| **Optional** | {{ bool_to_str(attr.optional) }} |
| **Default Value** | {{ attr.default_value }} |
| **Constraints** | {{attribute_constraints(attr)}} |
{% if attr.enum -%}
| **Accepted Values** | {% for value in  attr.enum %}`{{ value }}` {% endfor %} |
{% endif %}
{% endfor -%}

{% for rel in ns.node.relationships | sort(attribute='name') -%}
## {{ rel.name }}

| Key | Value | { class="compact" }
| ---- | --------------- |
| **Name** | {{ rel.name }} |
| **Kind** | {% if rel.cardinality == "one" %}`Object`{%else%}`List`{%endif%} |
| **Description** | {{ rel.description }} |

{% endfor -%}