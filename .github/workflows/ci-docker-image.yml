---
# yamllint disable rule:truthy
name: Build And Push Docker image

# When calling this workflow, ensure you use
#   secrets: inherit

on:
  workflow_call:
    inputs:
      publish:
        type: boolean
        description: Wether to publish the image to Infrahub Private Registry
        required: false
        default: false
      version:
        type: string
        required: false
        description: The string to extract semver labels from.
        default: ''
      ref:
        type: string
        required: true
        description: The GIT ref from which the image will be build
      tags:
        type: string
        required: true
        description: The tags for the docker image
      labels:
        type: string
        required: true
        description: The labels for the docker image
      platforms:
        type: string
        required: false
        description: Comma separated platform list to build the image for
        default: "linux/amd64,linux/arm64"

concurrency:
  group: ${{ github.workflow }}-${{ inputs.ref }}
  cancel-in-progress: true

env:
  DOCKERFILE: "development/Dockerfile"

jobs:
  build:
    runs-on:
      group: huge-runners
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: ${{ inputs.publish }}
        uses: docker/login-action@v3
        id: login
        with:
          registry: ${{ vars.HARBOR_HOST }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6
        id: push
        with:
          context: .
          file: ${{ env.DOCKERFILE }}
          provenance: false   # To avoid cross platform "unknown"
          push: ${{ inputs.publish }}
          target: "backend"
          platforms: ${{ inputs.platforms }}
          tags: ${{ inputs.tags }}
          labels: ${{ inputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
